{"version":3,"sources":["myshop.mp4","pictures/brand.jpg","components/projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Project","Container","fluid","Row","Col","lg","id","className","src","myshop","width","height","controls","React","Component","Home","md","offset","href","target","rel","brand","alt","App","Navbar","bg","variant","expand","sticky","Brand","Toggle","aria-controls","Collapse","Nav","Link","to","process","Dropdown","Menu","alignRight","Item","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.89db0624.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/myshop.69acfb8a.mp4\";","module.exports = __webpack_public_path__ + \"static/media/brand.1d6ff1a0.jpg\";","import React from 'react'\r\nimport myshop from '../myshop.mp4'\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport '../style.css'\r\nclass Project extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n            <Container fluid>\r\n            <Row>\r\n                <Col lg={12}>\r\n                \r\n                <video id='video' className='mt-2  mx-auto ' src={myshop}  width=\"800\" height=\"300\" controls=\"controls\" />\r\n                <p id='caption' className='mb-0 font-italic text-muted text-center'> \r\n                My Shop is a website for booking DStv subscriptions, CCTV and DSTV installations and accessories. \r\n                The platform grants flexibility for managing given orders orders. </p>\r\n\r\n                </Col>\r\n                \r\n            </Row>\r\n\r\n            </Container>\r\n        \r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Project","/* Import statements */\nimport React from \"react\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Project from './components/projects'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Navbar,Nav} from 'react-bootstrap'\nimport brand from './pictures/brand.jpg'\n\nimport {Container, Row, Col,Dropdown } from 'react-bootstrap'\nimport './style.css'\n\nclass Home extends React.Component{\n    render(){\n        return(\n            <Container>\n               \n                    <Row>\n                    <Col md={12}>\n                    <h1 className='mt-1 pt-5'> LOOKING FOR A FULL-STACK WEB DEVELOPER?</h1>\n                    </Col>\n                    \n                    </Row>\n\n                    <Row>\n                    <Col md={6}>\n                    <p id='home' className='text-justify'>\n                        Hello!  I am Jeremiah Taguta, a Full-stack Web Developer with a BSc degree in Computer Science \n                        who is  Agile and attentive to detail.\n\n                    </p>\n\n                    <Row>\n                    <Col md={12}>\n                    <h2>\n                        TECHNOLOGIES USED\n                    </h2>\n                    </Col>\n                    </Row>\n                    \n                    <Row>\n                    <Col md={12}>\n                    <p  className='text-justify'>\n                    <b>FRONTEND:</b> I employ Javascript, ReactJS, Mobirise, Bootstrap4, HTML5 ,\n                    CSS  and  Adobe XD for web development and design respectively! </p>\n                    <hr />\n\n                    <p  className='text-justify'>\n                    <b>BACKEND:</b> I use PHP, Python, SQL for RESTfuland CRUD API's, Django and WordPress frameworks to interact with MySql, \n                    Postgres, NoSql databases even on Cloud Services like AWS and GCP. </p>\n                    <hr />\n\n                    <p  className='text-justify'>\n                    <b>OTHER  PROGRAMMING LANGUAGES KNOWN:</b> Java, C and C++ </p>\n                    </Col>\n                    </Row>\n                    </Col>\n\n                    \n\n                    <Col lg={{offset: 2}} md={{offset: 2}}>\n                    <a  href='mailto: tagutaj@gmail.com' target=\"_blank\"  rel=\"noopener noreferrer\">      \n                    <img src={brand} className='rounded-circle' alt='Web Developer' width='400' height='400' /> \n                    <button className='btn btn-success btn-md' >Hire!</button>\n                    </a>\n                    </Col>\n\n                    </Row>                 \n               \n               \n           </Container>\n        )\n    }\n}\n/* Home component */\n\n\n\nclass App extends React.Component {\n\n  render(){\n      \n  return (\n    \n    <Router>\n    <div>\n    <Navbar className='App-navbar' bg=\"dark\"  variant=\"dark\" expand=\"lg\" sticky=\"top\" >\n    <Navbar.Brand href='mailto: tagutaj@gmail.com' target=\"_blank\"  rel=\"noopener noreferrer\">\n    <button className='btn btn-success btn-lg' >Contact Me!</button>\n    </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\" >\n            <Nav.Link to={process.env.PUBLIC_URL + '/'} >HOME</Nav.Link>           \n            <Nav.Link to={process.env.PUBLIC_URL + '/components/projects'} > MY WORK  </Nav.Link>\n\n      <Dropdown>\n        <Dropdown.Toggle variant=\"success\" id=\"links\">\n          IMPORTANT LINKS\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu alignRight>\n        <Dropdown.Item href=\"https://github.com/tagutaj\" target=\"_blank\"  \n          rel=\"noopener noreferrer\">GitHub</Dropdown.Item>\n\n          <Dropdown.Item href=\"https://www.linkedin.com/in/jeremiah-taguta-b44ba459\" target=\"_blank\"  \n          rel=\"noopener noreferrer\">LinkedIn</Dropdown.Item>\n          \n        </Dropdown.Menu>\n      </Dropdown>\n          </Nav>\n          </Navbar.Collapse>\n          </Navbar>\n       \n      \n      <Route exact={true} path={process.env.PUBLIC_URL + '/'}  component={Home} />\n      <Route  path={process.env.PUBLIC_URL + '/components/projects'} component={Project} />\n     \n      \n   </div>\n    </Router>\n   \n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}